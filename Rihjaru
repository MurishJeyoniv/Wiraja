 --===== Encrypt ===== -- 

indexWorld = 1
t = os.time()
bw = 0
rumah = ""
checknya = false

startbot = 1

for index, botname in pairs(getAllBot()) do
   if botname:getLocal().name:upper() == getBot():getLocal().name:upper() then
      searchName = index + ( startbot - 1 )
      break
   end
end

TotalWorldToGenerate = BotList[searchName].TotalWorldToGenerate
WorldLetters = BotList[searchName].WorldLetters
GenerateWithNumber = BotList[searchName].GenerateWithNumber
UseOtherAccToGenerate = BotList[searchName].UseOtherAccToGenerate
Growid = BotList[searchName].Growid
Pass = BotList[searchName].Pass
Lock = BotList[searchName].Lock
UseJammer = BotList[searchName].UseJammer
IDJammer = BotList[searchName].IDJammer
UseEntrance = BotList[searchName].UseEntrance
EntranceID = BotList[searchName].EntranceID
PlaceDoor = BotList[searchName].PlaceDoor
Door = BotList[searchName].Door
IDDoor = BotList[searchName].IDDoor
UseWebhookActivity = BotList[searchName].UseWebhookActivity
WhActivity = BotList[searchName].WhActivity
MessageID = BotList[searchName].MessageID

function findPath(targetX, targetY)
currentX = math.floor(getBot():getLocal().pos.x / 32)
currentY = math.floor(getBot():getLocal().pos.y / 32)
    local maxMoveDistance = 8

    -- Fungsi untuk menghitung jarak antara posisi saat ini dengan target
    function distanceToTarget(x, y)
        return math.abs(x - targetX) + math.abs(y - targetY)
    end

    -- Pergerakan vertikal
    while currentY ~= targetY do
      currentY = math.floor(getBot():getLocal().pos.y / 32)
      getBot():findPath(targetX, targetY)
     sleep(300)
    end

local dx = math.abs(targetX - currentX)
if dx < 2 then
local dx = math.abs(targetX - currentX)
    if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
        -- Pindahkan bot ke posisi Y yang lebih rendah
       getBot():findPath(targetX, targetY)
        sleep(150)
    end
while currentX ~= targetX do
currentX = math.floor(getBot():getLocal().pos.x / 32)
    getBot():setPos(targetX, targetY)
sleep(40)
end
else
    if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
        -- Pindahkan bot ke posisi Y yang lebih rendah
        getBot():findPath(targetX, targetY)
        sleep(150)
    end


    while currentX ~= targetX do
    if math.floor(getBot():getLocal().pos.y / 32) == 23 then
   getBot():findPath(targetX, targetY)
sleep(150)
end
  currentX = math.floor(getBot():getLocal().pos.x / 32)
        if currentX < targetX then
            currentX = math.min(targetX, currentX + 7)
        else
            currentX = math.max(targetX, currentX - 7)
        end
        getBot():setPos(currentX, currentY)
        sleep(500)
    end
end

    return currentX, currentY
end

function status()
    if getBot():getBotStatus() == Success then
      return string.upper("Online")
    elseif getBot():getBotStatus() == OnSendToServer then
      return string.upper("OnSendToServer")
    elseif getBot():getBotStatus() == Disconnected then
      return string.upper("Offline")
    elseif getBot():getBotStatus() == Banned then
      return string.upper("Banned")  
    elseif getBot():getBotStatus() == Suspended then
      return string.upper("Suspended")
    elseif getBot():getBotStatus() == Maintenance then
      return string.upper("Maintenance")
    elseif getBot():getBotStatus() == Connected then
      return string.upper("Coming Online")     
    elseif getBot():getBotStatus() == SERVER_OVERLOADED then
      return string.upper("Login Failed ( Overload )")
    elseif getBot():getBotStatus() == LogonATTEMPTS then
      return string.upper("Too Many Login Attempts")
    elseif getBot():getBotStatus() == Captcha then
      return string.upper("Solving Captcha")   
    elseif getBot():getBotStatus() == InvalidEmail then
      return string.upper("Invalid Email") 
    elseif getBot():getBotStatus() == Update_Required then
      return string.upper("Update Required") 
    elseif getBot():getBotStatus() == BypassTutorial then
      return string.upper("Finishing Tutorial")          
      else
      return string.upper("Unknown Status")
    end
end

function logs(text)
    local file = io.open("JopyDF.txt","a")
    file:write(text.."\n")
    file:close()
end

function ceknya()
  local RequestINFO = {}
  RequestINFO.url = "https://rentry.org/Wongcitamah/raw"

  -- Mengambil teks dari URL
  local x = httpReq(RequestINFO)
  local response = x.body
  
  -- Menghitung jumlah baris
  local lineCount = 0
  for _ in response:gmatch("[^\r\n]+") do
    lineCount = lineCount + 1
  end
  
  return lineCount
end

function nungguverify()
if not checknya then
return " Waiting To Verify!"
else
return " Verified!"
end
end

function cekbuyer(nameowner)
  local RequestINFO = {}
  RequestINFO.url = "https://rentry.org/Wongcitamah/raw"

  -- Mengambil teks dari URL
  local x = httpReq(RequestINFO)
  local response = x.body
  
  -- Memisahkan teks menjadi baris-baris
  local lines = {}
  for line in response:gmatch("[^\r\n]+") do
    table.insert(lines, line)
  end
  
  -- Mencari UserID berdasarkan nama owner
  for _, line in ipairs(lines) do
    local owner, userid = line:match("(%S+)%s+(%d+)")
    if owner == nameowner then
      return userid -- Mengembalikan UserID
    end
  end
  
  return nil -- Jika nama owner tidak ditemukan
end

function botshow(Info)
if not UseWebhookActivity then
return
else
te = os.time() - t
    local text = [[
        $webHookUrl = "]]..WhActivity..[[/messages/]]..MessageID..[["
        $CPU = Get-WmiObject Win32_Processor | Measure-Object -Property LoadPercentage -Average | Select -ExpandProperty Average
        $CompObject =  Get-WmiObject -Class WIN32_OperatingSystem
        $Memory = ((($CompObject.TotalVisibleMemorySize - $CompObject.FreePhysicalMemory)*100)/ $CompObject.TotalVisibleMemorySize)
        $RAM = [math]::Round($Memory, 0)
        $imageObject = @{
            url = "https://cdn.discordapp.com/attachments/1083626331515920404/1134097487448244234/standard.gif"
        }
        $footerObject = @{
        text = "]]..(os.date("!%a %b %d, %Y | %I:%M %p", os.time() + 7 * 60 * 60))..[["
        }
        $fieldArray = @(
            @{
                name = "**<:kannasip:1016295102882250823> ]]..nungguverify()..[[**"
                value = "**<@]]..cekbuyer(OwnerName)..[[>**"
                inline = "true"
            }
            @{
                name = "**<:suaongtho:1070039313674412063> Total Buyers**"
                value = "**]]..ceknya()..[[**"
                inline = "true"
            }
            @{
                name = "**<:mega:981220331572326471>  Bot Info** "
                value = "**]]..Info..[[**"
                inline = "false"
            }
            @{
                name = "**<:bot:1049606018008612874>  Bot Name** "
                value = "**]]..getBot():getLocal().name:upper()..[[ ( ]]..getBot():getLocal().level..[[ )**"
                inline = "true"
            }
            @{ 
                name = "**<a:online:1001674522321244270>  Bot Status **"
                value = "**]]..status()..[[**"
                inline = "true"
            }
            @{ 
                name = "**<:globez:1011929997679796254>  World** "
                value = "**||]]..getBot():getWorld().name:upper()..[[||**"
                inline = "true"
            }  
            @{ 
                name = "**<:gems:994218103032520724>  Bot Gems **"
                value = "**]]..getBot():getLocal().gems..[[**"
                inline = "true"
            }
            @{ 
                name = "**<:CPU:994981162588053565>  Cpu And Ram **"
                value = "**$CPU% | $RAM%**"
                inline = "true"
            } 
           @{
                name = "**<:discord_stage:1021386571909447680>  Ping** "
                value = "**]]..getBot():getMs()..[[ MS**"
                inline = "true"
            }
            @{
                name = "**<a:alert:1069590979029512192> Ban Wave**"
                value = "**]]..bw..[[**"
                inline = "true"
            }
            @{
                name = "**<:growtopia_clock:1011929976628596746>  Bot Up Time**"
                value = "**]]..math.floor(te/86400)..[[ Days ]]..math.floor(te%86400/3600)..[[ Hours ]]..math.floor(te%86400%3600/60)..[[ Minutes**"
                inline = "false"
            }
        )
        $embedObject = @{
            title = "**<:dirt:1049606471744225360> Jopy Auto DF ( Surfer ) <:dirt:1049606471744225360>**"
            color = "]]..math.random(111111,999999)..[["
            image = $imageObject
            footer = $footerObject
            fields = $fieldArray
        }
        $embedArray = @($embedObject)
        $payload = @{
            embeds = $embedArray
        }
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Patch -ContentType 'application/json'
    ]]
    local file = io.popen("powershell -command -", "w")
    file:write(text)
    file:close()
end
end

function TagBan(kata)
if not UseWebhookTagBan then
return
else
    local text = [[
        $webHookUrl = "]]..WhTagBan..[["
        $payload = @{
    content = "]]..kata..[["
        }
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-RestMethod -Uri $webHookUrl -Body ($payload | ConvertTo-Json -Depth 4) -Method Post -ContentType 'application/json'
    ]]
    local file = io.popen("powershell -command -", "w")
    file:write(text)
    file:close()
end
end

  function CheckBG()
    count = 0
    for _, tile in ipairs(getBot():getTiles()) do
        if tile.bg ~= 0 then
            count = count + 1
        end
    end
    return count
end

function CheckFG()
    count = 0
    for _, tile in ipairs(getBot():getTiles()) do
        if tile.fg ~= 0 then
            count = count + 1
        end
    end
    return count
end

function generate()
    ::BACK31::
    sleep(3000)
    getBot():sendPacket("action|quit_to_exit",3)
    sleep(3000)
    local WorldsToGenerate = ""
    for i = 1,WorldLetters do
        WorldsToGenerate = WorldsToGenerate..string.char(math.random(97,122))
    end
    getBot():sendPacket("action|join_request\nname|" .. WorldsToGenerate .. "\ninvitedWorld|0",3)
    sleep(3000)

    if CheckBG() > 3600 or CheckFG() > 3601 then
        goto BACK31
    end

    for _,t in ipairs(getBot():getTiles()) do
        if t.fg== 242 or t.fg== 9640 or t.fg== 202 or t.fg== 204 or t.fg== 206 or t.fg== 1796 or t.fg== 4994 or t.fg== 7188 or t.fg== 2408 or t.fg== 2950 or t.fg== 4428 or t.fg== 4802 or t.fg== 5814 or t.fg== 5260 or t.fg== 5980 or t.fg== 8470 or t.fg== 10410 or t.fg== 11550 or t.fg== 11586 then
            goto BACK31
        end
    end
end

function generateotheracc()
    ::BACK31::
    sleep(3000)
    getBot(Growid):sendPacket("action|quit_to_exit",3)
    sleep(3000)
    local WorldsToGenerate = ""
    for i = 1,WorldLetters do
        WorldsToGenerate = WorldsToGenerate..string.char(math.random(97,122))
    end
    getBot(Growid):sendPacket("action|join_request\nname|" .. WorldsToGenerate .. "\ninvitedWorld|0",3)
    sleep(3000)

    if CheckBG() > 3600 or CheckFG() > 3601 then
        goto BACK31
    end

    for _,t in ipairs(getBot(Growid):getTiles()) do
        if t.fg== 242 or t.fg== 9640 or t.fg== 202 or t.fg== 204 or t.fg== 206 or t.fg== 1796 or t.fg== 4994 or t.fg== 7188 or t.fg== 2408 or t.fg== 2950 or t.fg== 4428 or t.fg== 4802 or t.fg== 5814 or t.fg== 5260 or t.fg== 5980 or t.fg== 8470 or t.fg== 10410 or t.fg== 11550 or t.fg== 11586 then
            goto BACK31
        end
    end
end

function warp(world,id)
getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
sleep(4000)
getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
sleep(4000)
end

function mf(xy)
    return math.floor(xy / 32)
end

function punch(x,y)
    getBot():hitTile(mf(getBot():getLocal().pos.x) + x,mf(getBot():getLocal().pos.y) + y)
end

function punchotheracc(x,y)
    getBot(Growid):hitTile(mf(getBot(Growid):getLocal().pos.x) + x,mf(getBot(Growid):getLocal().pos.y) + y)
end

function wrench(x,y)
    getBot():wrenchTile(mf(getBot():getLocal().pos.x) + x,mf(getBot():getLocal().pos.y) + y)
end

function wrenchotheracc(x,y)
    getBot(Growid):wrenchTile(mf(getBot(Growid):getLocal().pos.x) + x,mf(getBot(Growid):getLocal().pos.y) + y)
end

function place(id,x,y)
   getBot():placeTile(mf(getBot():getLocal().pos.x) + x,mf(getBot():getLocal().pos.y) + y,id)
end

function placeotheracc(id,x,y)
   getBot(Growid):placeTile(mf(getBot(Growid):getLocal().pos.x) + x,mf(getBot(Growid):getLocal().pos.y) + y,id)
end



function replaceLava(x,y)
if BreakLava then
    while getBot():getTile(x,y).fg == 4 do
        punch(0,1)
        sleep(300)
       place(2,0,1)
    sleep(300)
    end
end
end

function banwave()
if AutoOffBot then
waras = getBot():getWorld().name
RequestINFO = {}
RequestINFO.url = "https://rentry.org/rihkumah/raw"
x = httpReq(RequestINFO)
if x.success then
local playerNumber = tonumber(x.body:match("%d+"))
  if playerNumber and playerNumber > tonumber(CustomOffPlayer) then
  local startTime = os.time() -- Waktu mulai
    sleep(1000)
    getBot():setBool("autoReconnect", false)
    getBot():disconnect()
    botshow("Bot Off, Ban Wave!, And Rest For "..SleepBotOff.." Minutes")
    sleep(SleepBotOff * 60 * 1000)
    getBot():setBool("autoReconnect", true)
    if getBot():getEnetStatus() ~= Connected then
    while getBot():getEnetStatus() ~= Connected do
    getBot():reConnect()
    sleep(7000)
    end
    end
    if getBot():getEnetStatus() == Connected then
    warp(rumah,wid:upper())
    jalan()
  end
end
end
end
end

function clearSide()
    for i=24,53 do  
        if getBot():getTile(1,i).bg == 14 then
            while getBot():getTile(1,i).bg == 14 do
                findPath(1,i-1)
                punch(0,1)
                sleep(150)
            end
            while getBot():getTile(0,i).bg == 14 do
                findPath(1,i-1)
                punch(-1,1)
                sleep(150)
            end
        end
    end
    for i=24,53 do
        if getBot():getTile(98,i).bg == 14 then
            while getBot():getTile(98,i).bg == 14 do
                findPath(98,i-1)
                punch(0,1)
                sleep(150)
            end
            while getBot():getTile(99,i).bg == 14 do
                findPath(98,i-1)
                punch(1,1)
                sleep(150)
            end
        end
    end
end

function collectObject(itemId)
    for _, object in pairs(getBot():getObjects()) do
        if object.id == itemId then
            local posX = math.floor(object.pos.x / 32)
            local posY = math.floor(object.pos.y / 32)
            if getBot():isInside(posX, posY,10) then
                getBot():collectObject(object.uid)
            getBot():autoCollect(4,true)
            else
                if findPath(posX, posY) then
                    sleep(50)
                    getBot():collectObject(object.uid)
                   getBot():autoCollect(4,true)
                end
            end
            sleep(50)
        end
    end
end


function ScanItem(ItemID)
local kiwar = 0
    for _, object in pairs(getBot():getObjects()) do 
        if object.id == ItemID then
      kiwar = kiwar + object.count
        end
    end
return kiwar
end

function takeplat()
waras = getBot():getWorld().name:upper()
warp(WorldStorage,IDWorldStorage)
if ScanItem(PlatformID) > 0 then
collectObject(PlatformID)
if getBot():getItemCount(PlatformID) > 0 then
getBot():autoCollect(4,false)
sleep(500)
end
if getBot():getItemCount(PlatformID) > 55 then
getBot():sendPacket("action|drop\n|itemID|PlatformID",2)
sleep(1000)
getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|PlatformID|\ncount|"..(getBot():getItemCount(PlatformID) - 55),2)
sleep(1000)
warp(waras,IDDoor)
else
TagBan("**The Platform In The World : "..getBot():getWorld().name:upper().." Was Not Enought The Platform Must At Least 55**\n**Now Bot Will Drop The Plat And Start Again With No Place Plat** @everyone")
PlacePlat = false
warp(waras,IDDoor)
end
else
TagBan("**No Platform In The World : "..getBot():getWorld().name:upper().." Now Bot Will Start Again With No Place Plat** @everyone")
PlacePlat = false
warp(waras,IDDoor)
  xbot = math.floor(getBot():getLocal().pos.x /32)
ybot = math.floor(getBot():getLocal().pos.y /32)
findPath(xbot-1,ybot)
sleep(300)
end
end

function clear()
    for _,i in ipairs(TrashList) do
        if getBot():getItemCount(i) > 0 then 
            local tresh =  getBot():getItemCount(i)
            getBot():sendPacket( "action|trash\n|itemID|".. i,2)
            getBot():sendPacket( "action|dialog_return\ndialog_name|trash_item\nitemID|" .. i .. "|\ncount|" .. tresh,2) 
            sleep(1000)
            tresh = nil
        end
    end
if getBot():getItemCount(3) > 150 then
 getBot():sendPacket( "action|trash\n|itemID|3",2)
 getBot():sendPacket( "action|dialog_return\ndialog_name|trash_item\nitemID|3|\ncount|" .. (getBot():getItemCount(3) - 150),2) 
  sleep(1000)
end
end

function platform()
    ::KIRANA::
    if PlacePlat then
    botshow("Placing Plat..")
    if getBot():getItemCount(PlatformID) > 0 then
        if getBot():getTile(1,4).fg ~= PlatformID then
            for i=52,2,-1 do
                if i % 2 == 0 then
                    getBot():findPath(1,i+1)
                    sleep(150)
                    place(PlatformID,0,-1)
                    sleep(DelayPlacePlat)
                end
            end
        end
        if getBot():getTile(98,4).fg ~= PlatformID then
            for i=52,2,-1 do
                if i % 2 == 0 then
                    getBot():findPath(98,i+1)
                    sleep(150)
                    place(PlatformID,0,-1)
                    sleep(DelayPlacePlat)
                end
            end
        end
  else
  takeplat()
  goto KIRANA
end
end
end

function clearDirt()
local anjay = false
botshow("Clearing Dirt...")
    for i=23,51 do
        if i % 2 == 1 then
            for j=2,98 do
                if getBot():getTile(j,i+2).bg == 0 and getBot():getTile(j,i+2).fg == 0 then
                    sleep(1)
                else
                    findPath(j,i)
                    replaceLava(j,i + 1)
                    while getBot():getTile(j,i+2).bg == 14 or getBot():getTile(j,i+2).bg ~= 0 do
                        sleep(DelayClearDirt)
                        punch(0,2)
                       clear()
                    end
                end
            end
        end
    end
end

function clearRock()
for _, tile in ipairs(getBot():getTiles()) do
if tile.fg == 10 then
findPath(tile.x,tile.y-1)
sleep(1000)
for i = 1,9 do
punch(0,1)
sleep(1000)
end
place(2,0,1)
sleep(100)
end
end
end

function getDirt()
    findPath(2,25)
    sleep(200)
    getBot():autoCollect(4,true)
    if getBot():getItemCount(3) > 0 then
    for i=1,20 do
       place(3,0,0)
      sleep(50)
      getBot():move(RIGHT,1)
     sleep(200)
    end
   sleep(31 *  1000)
  findPath(2,25)
  for i=1,20 do 
   punch(0,0)
   sleep(120)
  getBot():move(RIGHT,1)
  sleep(200)
end
end
    getBot():autoCollect(4,false)
end


function placeDirt()
botshow("Placing Dirt...")
    for i=22,2,-1 do
        if i % 2 == 0 then
            for j=2,97 do
                if getBot():getTile(j,i).fg == 0 then
                    if getBot():getItemCount(2) == 0 then
                        getDirt()
                    end
                    findPath(j,i+1)
                    sleep(150)
                    while getBot():getTile(math.floor(getBot():getLocal().pos.x /32), math.floor(getBot():getLocal().pos.y /32 -1)).fg ~= 2 do
                    place(2,0,-1)
                    sleep(DelayPlaceDirt)
                   end
                end
            end
        end
    end
end

function wear(id)
packet = {}
packet.type = 10 
packet.int_data = id
getBot():sendPacketRaw(packet)
end

function takepick()
if TakePick then
if getBot():getItemCount(98) == 0 then
getBot():autoCollect(4,false)
botshow("Bot Taking Pickaxe..")
    warp(WorldPick,IDWorldPick)
    if ScanItem(98) == 0 then
    TagBan("** No Pickaxe In "..WorldPick.." , Bot Will Start With No Wear Pickaxe** @everyone")
    else
    sleep(100)
    while getBot():getItemCount(98) == 0 do
 collectObject(98)
    getBot():move(LEFT,1)
    sleep(1000)
   getBot():move(UP,1)
   sleep(500)
   getBot():move(DOWN,1)
  if getBot():getItemCount(98) > 0 then
getBot():autoCollect(4,false)
sleep(500)
end
    if getBot():getItemCount(98) > 1 then
    getBot():sendPacket("action|drop\n|itemID|98",2)
    sleep(1000)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|98|\ncount|"..(getBot():getItemCount(98) - 1),2)
    sleep(1000)
    wear(98)
    sleep(500)
warp(rumah,IDDoor)
end
end
end
end
end
end

function editDoor(label,world,doorid)
    getBot():sendPacket("action|dialog_return\ndialog_name|door_edit\ntilex|"..math.floor(getBot():getLocal().pos.x/32).."|\ntiley|"..math.floor(getBot():getLocal().pos.y/32).."|\ndoor_name|"..label.."\ndoor_target|"..world.."\ndoor_id|"..doorid.."\ncheckbox_locked|0",2)
end

function editDoorotheracc(label,world,doorid)
    getBot(Growid):sendPacket("action|dialog_return\ndialog_name|door_edit\ntilex|"..math.floor(getBot(Growid):getLocal().pos.x/32).."|\ntiley|"..math.floor(getBot(Growid):getLocal().pos.y/32).."|\ndoor_name|"..label.."\ndoor_target|"..world.."\ndoor_id|"..doorid.."\ncheckbox_locked|0",2)
end

function IgnoreEmpty(x,y)
    getBot():sendPacket("action|dialog_return\ndialog_name|lock_edit\ntilex|"..(math.floor(getBot():getLocal().pos.x/32)+x).."|\ntiley|"..(math.floor(getBot():getLocal().pos.y/32)+y).."|\nbuttonClicked|recalcLock\n\ncheckbox_public|0\ncheckbox_ignore|1",2)
    sleep(500)
end

function IgnoreEmptyotheracc(x,y)
    getBot(Growid):sendPacket("action|dialog_return\ndialog_name|lock_edit\ntilex|"..(math.floor(getBot(Growid):getLocal().pos.x/32)+x).."|\ntiley|"..(math.floor(getBot(Growid):getLocal().pos.y/32)+y).."|\nbuttonClicked|recalcLock\n\ncheckbox_public|0\ncheckbox_ignore|1",2)
    sleep(500)
end


function lockworld()
xbot = math.floor(getBot():getLocal().pos.x /32)
ybot = math.floor(getBot():getLocal().pos.y /32)
if UseJammer then
place(IDJammer,-1,-1)
sleep(300)
punch(-1,-1)
sleep(500)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y / 32 + 1)).bg ~= 0 do
punch(-1,1)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -2), math.floor(getBot():getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -2), math.floor(getBot():getLocal().pos.y / 32 + 1)).bg ~= 0 do
punch(-2,1)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -2), math.floor(getBot():getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -2), math.floor(getBot():getLocal().pos.y / 32 + 2)).bg ~= 0 do
punch(-2,2)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y / 32 + 2)).bg ~= 0 do
punch(-1,2)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32), math.floor(getBot():getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32), math.floor(getBot():getLocal().pos.y / 32 + 2)).bg ~= 0 do
punch(0,2)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 1), math.floor(getBot():getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 1), math.floor(getBot():getLocal().pos.y / 32 + 2)).bg ~= 0 do
punch(1,2)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 2), math.floor(getBot():getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 2), math.floor(getBot():getLocal().pos.y / 32 + 2)).bg ~= 0 do
punch(2,2)
sleep(100)
end
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 2), math.floor(getBot():getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot():getTile(math.floor(getBot():getLocal().pos.x /32 + 2), math.floor(getBot():getLocal().pos.y / 32 + 1)).bg ~= 0 do
punch(2,1)
sleep(100)
end
if PlaceDoor then
getBot():move(LEFT,1)
sleep(100)
getBot():move(DOWN,1)
sleep(100)
while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32)).fg ~= Door do
place(Door,0,0)
sleep(1000)
end
wrench(0,0)
sleep(1000)
editDoor("Jopy","Jopy",IDDoor)
sleep(2000)
getBot():move(UP,1)
sleep(100)
getBot():move(RIGHT,1)
sleep(100)
end
place(2,1,-1)
sleep(1000)
place(Lock,0,-1)
sleep(1000)
if UseEntrance then
place(EntranceID,1,0)
sleep(300)
place(EntranceID,-1,0)
sleep(300)
else
place(2,1,0)
sleep(300)
place(2,-1,0)
sleep(300)
end
wrench(0,-1)
sleep(2000)
IgnoreEmpty(0,-1)
sleep(1000)
warp(rumah,IDDoor)
end

function lockworldotheracc()
xbot = math.floor(getBot(Growid):getLocal().pos.x /32)
ybot = math.floor(getBot(Growid):getLocal().pos.y /32)
if UseJammer then
placeotheracc(IDJammer,-1,-1)
sleep(300)
punchotheracc(-1,-1)
sleep(500)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -1), math.floor(getBot(Growid):getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -1), math.floor(getBot():getLocal(Growid).pos.y / 32 + 1)).bg ~= 0 do
punchotheracc(-1,1)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 1)).bg ~= 0 do
punchotheracc(-2,1)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).bg ~= 0 do
punchotheracc(-2,2)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -1), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 -1), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).bg ~= 0 do
punchotheracc(-1,2)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).bg ~= 0 do
punchotheracc(0,2)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 1), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 1), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).bg ~= 0 do
punchotheracc(1,2)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 2)).bg ~= 0 do
punchotheracc(2,2)
sleep(100)
end
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 1)).fg ~= 0 or getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x /32 + 2), math.floor(getBot(Growid):getLocal().pos.y / 32 + 1)).bg ~= 0 do
punchotheracc(2,1)
sleep(100)
end
if PlaceDoor then
getBot(Growid):move(LEFT,1)
sleep(100)
getBot(Growid):move(DOWN,1)
sleep(100)
while getBot(Growid):getTile(math.floor(getBot(Growid):getLocal().pos.x / 32), math.floor(getBot(Growid):getLocal().pos.y / 32)).fg ~= Door do
placeotheracc(Door,0,0)
sleep(1000)
end
wrenchotheracc(0,0)
sleep(1000)
editDoorotheracc("Jopy","Jopy",IDDoor)
sleep(2000)
getBot(Growid):move(UP,1)
sleep(100)
getBot(Growid):move(RIGHT,1)
sleep(100)
end
placeotheracc(2,1,-1)
sleep(1000)
placeotheracc(Lock,0,-1)
sleep(1000)
if UseEntrance then
placeotheracc(EntranceID,1,0)
sleep(300)
placeotheracc(EntranceID,-1,0)
sleep(300)
else
placeotheracc(2,1,0)
sleep(300)
placeotheracc(2,-1,0)
sleep(300)
end
wrenchotheracc(0,-1)
sleep(2000)
IgnoreEmptyotheracc(0,-1)
sleep(1000)
end




function worldnya()
if not UseOtherAccToGenerate then
generate()
else
addBot(Growid,Pass)
sleep(8000)
generateotheracc()
rumah = getBot(Growid):getWorld().name:upper()
logs("World : "..rumah.."")
lockworldotheracc()
getBot(Growid):remove()
sleep(2000)
end
end

function generatemode()
for i = 1,TotalWorldToGenerate do
botshow("Finding World..")
worldnya()
if UseOtherAccToGenerate then
warp(rumah,IDDoor)
end
if not UseOtherAccToGenerate then
rumah = getBot():getWorld().name:upper()
logs("World : "..rumah.."")
lockworld()
end
getBot():autoCollect(4,true)
takepick()
getBot():autoCollect(4,true)
clearSide()
banwave()
platform()
banwave()
clearDirt()
banwave()
placeDirt()
if BreakRock then
clearRock()
end
getBot():sendPacket("action|respawn", 2)
sleep(5000)
if AutoTakeJammerWhenDone and not UseOtherAccToGenerate then
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y /32 - 1)).fg == IDJammer do
punch(-1,-1)
sleep(200)
end
place(2,-1,-1)
sleep(200)
end
if AutoTakeJammerWhenDone and UseOtherAccToGenerate then
addBot(Growid,Pass)
sleep(8000)
getBot(Growid):warp(rumah)
while getBot():getTile(math.floor(getBot():getLocal().pos.x /32 -1), math.floor(getBot():getLocal().pos.y /32 - 1)).fg == IDJammer do
punch(-1,-1)
sleep(200)
end
place(2,-1,-1)
sleep(200)
getBot():remove()
end
place(2,-2,1)
sleep(300)
place(2,2,1)
sleep(300)
end
botshow("All Df Has Been Created, Removing Bot...")
getBot():remove()
end

function main()
botshow("Bot Start")
generatemode()
end

function checkdata()
  botshow("Waiting To Verification...")

  RequestINFO1 = {}
  RequestINFO1.url = "https://rentry.org/woiktamah/raw"
  x = httpReq(RequestINFO1)

  if x.success then
    if string.find(x.body, OwnerName) then
checknya = true
  main()
  else
TagBan("Use Command !rundfsurfer First Then Run Script @everyone")
return
end
else
TagBan("Error When Run Script, Try To Re Run The Script, If Problem Still, Use Vpn And Re Run @everyone ")
return
end
end



checkdata()
