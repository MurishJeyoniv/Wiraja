--===JOPY STORE===--
BreakTiles = "1"
Time = {}
ProxyBackUp = {}
berlian = {}
pohon = {}
worlds = {}
t = os.time()	
loop = 0
bw = 0
gemsawal = 0
gemssave = 0
gemsakhir = 0
strWaktu = ""
afgangila = "true"
skiptutorial = "false"
seeddata = ""
rumah = ""
totaldropnya = 0
IndexBotChange = 1
ChangeProxyIndex = 1
proxyIndex = 1
proxyIndexAdd = 1
proxyIndexAddAttempt = 0
fire = false
BpCek = false
growidIndex = 1
emoji = ""
loopnya = 0
checknya = false
widreal = ""
metotone = false
modefloat = false

randomPack = math.random(1, #WorldSavePack)
randomSeed = math.random(1, #WorldSaveSeed)

IndexSavePack = randomPack
IndexSaveSeed = randomSeed

if OwnerName == "" then
return
end

function TagBan(text)
    RequestINFO = {}
    RequestINFO.url = WhTagBan
    RequestINFO.method = POST
    RequestINFO.postData = "content=" .. text
    x = httpReq(RequestINFO)
end

if not checknya then
  RequestINFO2 = {}
  RequestINFO2.url = "https://rentry.org/woiilangawas/raw"
  y = httpReq(RequestINFO2)

if y.success then
if string.find(y.body, OwnerName) then
checknya = true
else
TagBan("**OwnerName Not Found , Please Use Command First Then Run The Script ** @everyone")
log("Failed To Get OwnerName Data")
return
end
else
TagBan("**Cant Open Database, Trying To ReOpened Again.. ** @everyone")
sleep(10000)
return
end
end


function findPath(targetX, targetY)
currentX = math.floor(getBot():getLocal().pos.x / 32)
currentY = math.floor(getBot():getLocal().pos.y / 32)
    local maxMoveDistance = 8

    -- Fungsi untuk menghitung jarak antara posisi saat ini dengan target
    function distanceToTarget(x, y)
        return math.abs(x - targetX) + math.abs(y - targetY)
    end

    -- Pergerakan vertikal
    while currentY ~= targetY do
currentY = math.floor(getBot():getLocal().pos.y / 32)
 getBot():findPath(targetX,targetY) 
sleep(DelayFindPathY)
end

local dx = math.abs(targetX - currentX)
if dx < 5 then
local dx = math.abs(targetX - currentX)
while currentX ~= targetX do
currentX = math.floor(getBot():getLocal().pos.x / 32)
    if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
        getBot():findPath(targetX, targetY)
        sleep(100)
    end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 3), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 3), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
getBot():findPath(targetX, targetY)
sleep(100)
end
if getBot():setPos(targetX, targetY) then
sleep(DelayFindPathX)
else
getBot():findPath(targetX,targetY)
sleep(100)
end
end
else
    if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 2), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
        -- Pindahkan bot ke posisi Y yang lebih rendah
        getBot():findPath(targetX, targetY)
        sleep(100)
    end


    while currentX ~= targetX do
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 3), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 3), math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
getBot():findPath(targetX, targetY)
sleep(100)
end
  currentX = math.floor(getBot():getLocal().pos.x / 32)
        if currentX < targetX then
            currentX = math.min(targetX, currentX + 5)
        else
            currentX = math.max(targetX, currentX - 5)
        end
 if getBot():setPos(currentX,currentY) then
   sleep(500)
else
getBot():findPath(targetX, targetY)
sleep(100)
end
end
end


while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32 + 1)).fg == seedid-1 do
getBot():hitTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32 + 1))
sleep(delaypunch)
end

while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32 - 1)).fg == seedid-1 do
getBot():hitTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32 - 1))
sleep(delaypunch)
end

while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 1), math.floor(getBot():getLocal().pos.y / 32 )).fg == seedid-1 do
getBot():hitTile(math.floor(getBot():getLocal().pos.x / 32 - 1),math.floor(getBot():getLocal().pos.y / 32 ))
sleep(delaypunch)
end

while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 + 1), math.floor(getBot():getLocal().pos.y / 32 )).fg == seedid-1 do
getBot():hitTile(math.floor(getBot():getLocal().pos.x / 32 + 1),math.floor(getBot():getLocal().pos.y / 32 ))
sleep(delaypunch)
end

    return currentX, currentY
end

function getSocks(v)
    local hostname, port, username, password = v:match("([^:]+):([^:]+):([^:]+):([^:]+)")
    Proxy = {
        HostName= hostname..":"..port,
        Username= username,
        Password= password,
        Type=SOCKS5--SOCKS5/BOTNET
    }
    return Proxy
end

if AutoAddBot then
  if AutoAddBotType == "LOGINGUEST" then
    for i = 1, #ListBotAdd do
      if not UseProxyToAdd then
        loginGuest("", ListBotAdd[i])
        sleep(5000)
        
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
            getBot():remove()
          end
          
          if getBot():getBotStatus() == Success then
            -- Eksekusi aksi ketika bot berhasil login
            proxyIndexAddAttempt = proxyIndexAddAttempt + 1
          end
        end
      else
        loginGuest("", getSocks(ProxyList[proxyIndexAdd]), ListBotAdd[i])
        sleep(5000)

        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." At "..ProxyList[proxyIndexAdd].." Proxy @everyone")
            getBot():remove()
         end
       
       if getBot():getBotStatus() == Success then
           -- here
        end
     end
            
         proxyIndexAddAttempt = proxyIndexAddAttempt + 1
            if proxyIndexAddAttempt == MaxBotPerProxy then
              if proxyIndexAdd <= #ProxyList then
                proxyIndexAdd = proxyIndexAdd + 1
                proxyIndexAddAttempt = 0
              else
                TagBan("**No More Socks Can Be Used For Adding Bot, Please Check It ** @everyone ")
              end
            end
          end
        end
      end
end


if AutoAddBot then
  if AutoAddBotType == "GUEST" then
    for i = 1, TotalGuestWillCreate do
      if not UseProxyToAdd then
        addGuest("")
        sleep(5000)
        
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == BypassTutorial or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Unable_to_create_new_account
          
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Unable_to_create_new_account then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
            getBot():remove()
          end
          
          if getBot():getBotStatus() == Success or getBot():getBotStatus() == BypassTutorial then
            sleep(10000)
          end
        end
      else
        addGuest("", getSocks(ProxyList[proxyIndexAdd]))
        sleep(5000)
        
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == BypassTutorial or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Unable_to_create_new_account
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Unable_to_create_new_account then
          TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is Unable To Create Acc At "..ProxyList[proxyIndexAdd].." Proxy @everyone")
            getBot():remove()
         end
            
            if proxyIndexAdd <= #ProxyList then
              proxyIndexAdd = proxyIndexAdd + 1
            else
              TagBan("**No More Socks Can Be Used In The ProxyList, Please Check It** @everyone")
            end
          
          if getBot():getBotStatus() == Success or getBot():getBotStatus() == BypassTutorial then
            sleep(10000)
          end
     end
          
          proxyIndexAddAttempt = proxyIndexAddAttempt + 1
          
          if proxyIndexAddAttempt == MaxBotPerProxy then
            if proxyIndexAdd <= #ProxyList then
              proxyIndexAdd = proxyIndexAdd + 1
              proxyIndexAddAttempt = 0
            else
              TagBan("**No More Socks Can Be Used For Adding Bot, Please Check It ** @everyone ")
            end
          end
        end
      end
    end
  end


if AutoAddBot then
  if AutoAddBotType == "NORMAL" then
    for i = 1, #ListBotAdd do
      if not UseProxyToAdd then
        addBot(ListBotAdd[i], PwBot)
        sleep(5000)
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
          end
          if getBot():getBotStatus() == Success then
            -- Lanjutkan code di bawahnya di sini
          end
        end
      else
        addBot(ListBotAdd[i], PwBot, getSocks(ProxyList[proxyIndexAdd]))
        sleep(5000)
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
            getBot():remove()
          end
          if getBot():getBotStatus() == Success then
            -- Lanjutkan code di bawahnya di sini
          end
end
        proxyIndexAddAttempt = proxyIndexAddAttempt + 1
          if proxyIndexAddAttempt == MaxBotPerProxy then
       if proxyIndexAdd <= #ProxyList then
          proxyIndexAdd = proxyIndexAdd + 1
          proxyIndexAddAttempt = 0
       else
       TagBan("**No More Socks Can Be Used For Adding Bot, Please Check It ** @everyone ")
        end
          end
      end
    end
  end
end


if AutoAddBot then
  if AutoAddBotType == "UBICON" then
  for i = 1, #Email do
      if not UseProxyToAdd then
        addBot(Email[i], Password)
        sleep(5000)
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
          end
          if getBot():getBotStatus() == Success then
            -- Lanjutkan code di bawahnya di sini
          end
        end
      else
        addBot(Email[i], Password, getSocks(ProxyList[proxyIndexAdd]))
        sleep(5000)
        if getBot():getBotStatus() ~= Success then
          repeat
            getBot():reConnect()
            sleep(8000)
          until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended
          if getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended then
            TagBan("**Fail To Add Bot ( "..getBot():getLocal().name:upper().." ) Because The Bot Is "..getBot():getBotStatus():upper().." @everyone")
            getBot():remove()
          end
          if getBot():getBotStatus() == Success then
            -- Lanjutkan code di bawahnya di sini
          end
end
        proxyIndexAddAttempt = proxyIndexAddAttempt + 1
          if proxyIndexAddAttempt == MaxBotPerProxy then
       if proxyIndexAdd <= #ProxyList then
          proxyIndexAdd = proxyIndexAdd + 1
          proxyIndexAddAttempt = 0
       else
       TagBan("**No More Socks Can Be Used For Adding Bot, Please Check It ** @everyone ")
        end
          end
      end
    end
  end
end


startslotbot = 1

for index, namebotx in pairs(getAllBot()) do
   if namebotx:getLocal().name:upper() == getBot():getLocal().name:upper() then
      rulah = index + ( startslotbot - 1 )
      break
   end
end

anjaynya = 0

    if rulah > 1 then
        anjaynya = anjaynya + 0
    elseif rulah == 1 then
        anjaynya = anjaynya + 1
    end

for i = 1,anjaynya do
msgBox("Script Rotation Jopy","Script Has Running Successfully")
end


sleepwarp = 0
sleepmulai = 0

for i = 1,rulah do
sleepwarp = sleepwarp + 9000
end

for i = 1,rulah do
sleepmulai = sleepmulai + 5000
end


urutanbot = rulah * MaxWorldPerBot


for i = 1, MaxWorldPerBot do
   table.insert(worlds,WorldList[urutanbot])
   urutanbot = urutanbot - 1
end

for i = 1, rulah do
    if WEBHOOK[i] and MESSAGEID[i] then
        WhStatus = WEBHOOK[i]
        MessageID = MESSAGEID[i]
        rulah = rulah - 1
    else
        WhStatus = ""
        MessageID = ""
        rulah = rulah - 1
    end
end



seedid = 0
seedidfloat = 0

function detect2(itemid)
local count = 0
for _, tile in ipairs(getBot():getTiles()) do
if tile.fg == itemid then
count = count + 1
end
end
return count
end

rootlist = {
    8624, 8626, 8628, 8630, 8632, 8634, 8636, 8638, 8640, 8642, 
    8644, 8646, 8648, 8650, 8652, 8654, 8656, 8658, 8660, 8662, 
    8664, 8666, 8668, 8670, 8672, 8674, 8676, 8678, 8680, 8682, 
    8684, 8686, 8688, 8690, 8692, 8694, 8696, 8698, 8700, 8702, 
    8704, 8706, 8708, 8710, 8712, 8714, 8716, 2 , 8772
}

function cekseed()
for i, root in pairs(rootlist) do
if seedid == root then
seedid = detectsoil()
end
end
end

function cekseed2()
for i, root in pairs(rootlist) do
if seedid == root then
seedid = 0
end
end
end


function detect()
        for y = 53, 1, -1 do
            for x = 98, 2, -1 do
                local tile = getBot():getTile(x, y)
                if tile.fg ~= 0 and detect2(tile.fg) > 60 then
                    return tile.fg
                end
            end
        end

    return 0
end

function detectsoil()
    for y = 0, 52 do
        for x = 1, 99 do
            local tile = getBot():getTile(x, y)
            if tile.fg ~= 0 and detect2(tile.fg) > 60 then
                return tile.fg
            end
        end
    end

    return 0
end

idtable = {}

function float1()
for _, obj in pairs(getBot():getObjects()) do
        table.insert(idtable, obj.id)
    end
end

local idCount = {}
function float2()
for _, id in pairs(idtable) do
    if idCount[id] then
        idCount[id] = idCount[id] + 1
    else
        idCount[id] = 1
    end
end
end

-- Mencari ID dengan frekuensi terbanyak
function detectfloat()
local mostFrequentID
local maxCount = 0
for id, count in pairs(idCount) do
    if count > maxCount then
        mostFrequentID = id
        maxCount = count
    end
end
if mostFrequentID then
return mostFrequentID
end
return 0
end





blockid = seedid-1
start = 1
stop = #WorldList

if loop then
    for i = 0,start - 1 do
        table.insert(worlds,WorldList[i])
    end
end


function DataWorld()
    strWaktu = ""
        for _, world in pairs(worlds) do
strWaktu = strWaktu .. "\n**" .. world:upper() .. " [ " .. (Time[world] or "?") .. " | " .. ":palm_tree: : " .. (pohon[world] or "0") .. " | " .. ":gem: : " .. (berlian[world] or "0") .. " ]**"  
end
return strWaktu
end

   function Fossil()
   local fossil = 0
    for _,tile in ipairs(getBot():getTiles()) do
        if tile.fg == 3918 then
            fossil = fossil + 1
        end
    end
    return fossil 
end

function wear(id)
packet = {}
packet.type = 10 
packet.int_data = id
getBot():sendPacketRaw(packet)
end

item_list = {250,1716,82,78,94,662,754,146,356,72,46,124,1720,92,1122,212,84,1722,1844,2718,70,4966,288,232,788,148,96,3932,448,134,50,74,1504,494,266,852,132,2954,3934,3060,3056,1800,88,2960,1022,2578,3964,86,302,1332,304,1116,6788,10542,492,1690,316,1850,1718,1838,1032,1860,1026,3048,352,724,1590,798,488,1342,794,268,1502,8884,1858,594,3466,1314,1688,1312,3590,446,1856,1854,1516,1316,2700,4968,4964,6796,1862,310,290,296,6674,1864,4954,1476,896,1848,496,136,158,2958,2576,1954,152,1126,796,1524,2928,80,2934,150,1120,1142,1478,154,9356,452,258,2882,156,1140,3530,312,1124,890,1330,3052,294,1650,1652,348,1736,576,5016,1708,292,1146,1028,1762,600,11204}

function metot1()

for _, item_id in ipairs(item_list) do
    local item_count = getBot():getItemCount(item_id)  -- Menggunakan fungsi yang sesuai

    if item_count > 0 then
        wear(item_id)
        sleep(2000)
    end
end
end

function rmetot1()
if not metotone and UseMethod then
if getBot():getLocal().gems > 500 then
getBot():sendPacket("action|buy\nitem|rare_clothes",2)
sleep(4000)
metot1()
metotone = true
end
end
end

function tre()
  local readytree = 0
      for _,til in ipairs(getBot():getTiles()) do
          if til.fg == seedid and getBot():canHarvest(til.x,til.y) then
          readytree = readytree + 1
          end
      end
      return readytree
    end


function totaltree()
  local readytree = 0
      for _,til in ipairs(getBot():getTiles()) do
          if til.fg == seedid then
          readytree = readytree + 1
          end
      end
      return readytree
    end


   function un()
 unreadytree = 0
for _, t in ipairs(getBot():getTiles()) do
if t.fg == seedid and not getBot():canHarvest(t.x,t.y) then
unreadytree = unreadytree + 1
end
end
return unreadytree
end

function cekemoji()
if seedid == 4585 then
return "<:paperseedbs:1063061801601871932>"
elseif seedid == 5667 then
return "<:lgrid_seed:1091612884758437959>"
elseif seedid == 3005 then
return "<:fish_tank_seed:1012563310308233327>"
elseif seedid == 8641 then
return "<:Fence_seed:1121360619887661056>"
else
return  "<:paperseedbs:1063061801601871932>"
end
end

function status()
    if getBot():getBotStatus() == Success then
      return string.upper("Online")
    elseif getBot():getBotStatus() == OnSendToServer then
      return string.upper("OnSendToServer")
    elseif getBot():getBotStatus() == Disconnected then
      return string.upper("Offline")
    elseif getBot():getBotStatus() == Banned then
      return string.upper("Banned")  
    elseif getBot():getBotStatus() == Suspended then
      return string.upper("Suspended")
    elseif getBot():getBotStatus() == Maintenance then
      return string.upper("Maintenance")
    elseif getBot():getBotStatus() == Connected then
      return string.upper("Coming Online")     
    elseif getBot():getBotStatus() == SERVER_OVERLOADED then
      return string.upper("Login Failed ( Overload )")
    elseif getBot():getBotStatus() == LogonATTEMPTS then
      return string.upper("Too Many Login Attempts")
    elseif getBot():getBotStatus() == Captcha then
      return string.upper("Solving Captcha")   
    elseif getBot():getBotStatus() == InvalidEmail then
      return string.upper("Invalid Email") 
    elseif getBot():getBotStatus() == Update_Required then
      return string.upper("Update Required") 
    elseif getBot():getBotStatus() == BypassTutorial then
      return string.upper("Finishing Tutorial")          
      else
      return string.upper("Unknown Status")
    end
end


function cekbuyer(nameowner)
  local RequestINFO = {}
  RequestINFO.url = "https://rentry.org/wongrekkahmesi2/raw"

  -- Mengambil teks dari URL
  local x = httpReq(RequestINFO)
  local response = x.body
  
  -- Memisahkan teks menjadi baris-baris
  local lines = {}
  for line in response:gmatch("[^\r\n]+") do
    table.insert(lines, line)
  end
  
  -- Mencari UserID berdasarkan nama owner
  for _, line in ipairs(lines) do
    local owner, userid = line:match("(%S+)%s+(%d+)")
    if owner == nameowner then
      return userid -- Mengembalikan UserID
    end
  end
  
  return nil -- Jika nama owner tidak ditemukan
end


totalpack = 0
hasilpack = 0
hasilseed = 0
seeddrop = 0

function cekhasilseed()
if hasilseed > 0 then
return "( + "..hasilseed.." ) "
else
return  ""
end
end

function cekhasilpack()
if hasilpack > 0 then
return "( + "..hasilpack.." ) "
else
return  ""
end
end


function nungguverify()
if not checknya then
return " Waiting To Verify!"
else
return " Verified!"
end
end

function cekemoji2()
if seedid == 4585 then
return "<:peppertree:999318156696887378>"
elseif seedid == 5667 then
return "<:lgrid:999318066070552716>"
else
return  "<:lgrid:999318066070552716>"
end
end

function ceknya()
  local RequestINFO = {}
  RequestINFO.url = "https://rentry.org/wongrekkahmesi2/raw"

  -- Mengambil teks dari URL
  local x = httpReq(RequestINFO)
  local response = x.body
  
  -- Menghitung jumlah baris
  local lineCount = 0
  for _ in response:gmatch("[^\r\n]+") do
    lineCount = lineCount + 1
  end
  
  return lineCount
end

function cekbp()
if not BpCek then
if getBot():getLocal().slot < 36 then
if getBot():getLocal().gems > 300 then
repeat
getBot():sendPacket("action|buy\nitem|upgrade_backpack",2)
sleep(3000)
until getBot():getLocal().slot == 36
BpCek = true
end
end
end
end


function botshow(Info)
if WhStatus == "" then 
return
end
te = os.time() - t
 local verify = "<a:cham:849841924734976000> **Status Verify: "..nungguverify().."**"
local activity = "**<:Pickaxe:1109395511661830176> Activity: "..Info.."**"
local namebot = "**<:bot:1049606018008612874> Name: "..getBot():getLocal().name:upper().." ( "..getBot():getLocal().level.." )**"
local world = "**<:World:1006699847308546109> World:** ||**"..getBot():getWorld().name:upper().."**||"
local statusbot = "**<a:Online:1063444758783078480> Status: "..status().."**"
local ping = "**<:Ping:1136942362103402566> Ping: "..getBot():getMs().." Ms**"
local ready = "**"..emoji.." Ready Tree: "..tre().."**"
local unready = "**"..emoji.." UnReady Tree: "..un().."**"
local gems = "**<:gems:1083907540242407547> Gems: "..getBot():getLocal().gems.."**"
local fossilinfo = "**<:fossilrock:1064165167992156240> Fossil: "..Fossil().."**"
local uptime = "**<:pro_timeout:1100160755287982150>  Up Time**\n**"..math.floor(te/86400).." Days "..math.floor(te%86400/3600).." Hours "..math.floor(te%86400%3600/60).." Minutes "..math.floor(te%86400%3600%60).." Seconds**"

local deskripsi = verify .. "\n\n" .. activity .. "\n" .. namebot .. "\n" .. world .. "\n" .. statusbot .. "\n" .. ping .. "\n" .. ready .. "\n" .. unready .. "\n" .. gems .. "\n" .. fossilinfo .. "\n" ..DataWorld().. "\n\n" ..uptime

    RequestINFO = {}
    RequestINFO.url = WhStatus.."/messages/"..MessageID
    RequestINFO.json = true
    RequestINFO.method = PATCH
    RequestINFO.postData =
        [[
        {
            "content": "Script Running",
            "embeds": [
                {
                    "title": "Jopy Rotation Surfer ( Total Buyer: ]]..ceknya()..[[ )",
                    "description": "]]..deskripsi:gsub("\n", "\\n")..[[",
                    "color": "]] .. math.random(0, 16777215) .. [[",
                    "footer": {
                        "text": "]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[[",
                        "icon_url": "https://share.creavite.co/9ugoY1REemeb0nVZ.gif"
                    },
                    "thumbnail": {
                        "url": "https://cdn.discordapp.com/icons/1083626271038263357/8e34c12fcd52fa363eeb14c2e401a26b.png?size=4096"
                    }
                }
            ]
        }
        ]]

    x = httpReq(RequestINFO)
if not x.success then
log(x.failInfo)
end
    
end

function botpack(Info)
if not UseWebhookPackAndSeed or WhPackAndSeed == "" then
return
else
te = os.time() - t
 local packname = "<:shop_sign:1012590603172847648> **Pack Name: "..pack.."**"
local activity = "**<:Pickaxe:1109395511661830176> Activity: "..Info.."**"
local namebot = "**<:bot:1049606018008612874> Name: "..getBot():getLocal().name:upper().." ( "..getBot():getLocal().level.." )**"
local world = "**<:World:1006699847308546109> World: **||**"..getBot():getWorld().name:upper().."**||"
local statusbot = "**<a:Online:1063444758783078480> Status: "..status().."**"
local ping = "**<:Ping:1136942362103402566> Ping: "..getBot():getMs().." Ms**"
local gems = "**<:gems:1083907540242407547> Gems: "..getBot():getLocal().gems.."**"
local uptime = "**<:pro_timeout:1100160755287982150>  Up Time**\n**"..math.floor(te/86400).." Days "..math.floor(te%86400/3600).." Hours "..math.floor(te%86400%3600/60).." Minutes "..math.floor(te%86400%3600%60).." Seconds**"
local totalseed = "**"..emoji.." Total Seed: "..seeddrop.."  "..cekhasilseed().." **"
local totalpacknya = "**<:small_seed_pack:1144029525399842906> Total Pack: "..totalpack.."  "..cekhasilpack().." **"

local deskripsi =  packname .. "\n" .. activity .. "\n" .. namebot .. "\n" .. world .. "\n" .. statusbot .. "\n" .. ping .. "\n" .. gems .. "\n" .. totalseed .. "\n" .. totalpacknya .. "\n\n" ..uptime

    RequestINFO = {}
    RequestINFO.url = WhPackAndSeed.."/messages/"..MessageIDPack
    RequestINFO.json = true
    RequestINFO.method = PATCH
    RequestINFO.postData =
        [[
        {
            "content": "Script Running",
            "embeds": [
                {
                    "title": "Jopy Rotation Surfer ( Total Buyer: ]]..ceknya()..[[ )",
                    "description": "]]..deskripsi:gsub("\n", "\\n")..[[",
                    "color": "]] .. math.random(0, 16777215) .. [[",
                    "footer": {
                        "text": "]]..(os.date("!%a %b %d, %Y at %I:%M %p", os.time() + 7 * 60 * 60))..[[",
                        "icon_url": "https://share.creavite.co/9ugoY1REemeb0nVZ.gif"
                    },
                    "thumbnail": {
                        "url": "https://cdn.discordapp.com/icons/1083626271038263357/8e34c12fcd52fa363eeb14c2e401a26b.png?size=4096" 
                    }
                }
            ]
        }
        ]]

    x = httpReq(RequestINFO)
    if not x.success then
log(x.failInfo)
end
end
end


function soilmode()
if SoilFarmMode then
    if IgnoreGems then
      getBot():setBool("ignoreGem", true)
      getBot():autoCollect(4, true)
      for _, tile in ipairs(getBot():getTiles()) do
        if getBot():getTile(tile.x, tile.y - 1).fg == seedid and getBot():canHarvest(tile.x, tile.y - 1) and getBot():getItemCount(seedid - 1) < 165 then 
          if getBot():hasAccessToTile(tile.x,tile.y-1) then
            findPath(tile.x, tile.y - 1)
                while getBot():getTile(tile.x, tile.y - 1).fg == seedid and getBot():canHarvest(tile.x, tile.y - 1) do
              reconnect(tile.x, tile.y - 1)
              getBot():hitTile(tile.x, tile.y - 1)
              sleep(delayharvest)
            end
            while getBot():getTile(tile.x, tile.y).fg == (seedid + 3) and getBot():getTile(tile.x, tile.y).flags ~= 0 do
              punch(0,1)
              sleep(delayharvest + 150)
              reconnect(tile.x, tile.y - 1)
            end
          end
      end
end
    else
      getBot():autoCollect(4, true)
      for _, tile in ipairs(getBot():getTiles()) do
        if getBot():getTile(tile.x, tile.y - 1).fg == seedid and getBot():canHarvest(tile.x, tile.y - 1) and getBot():getItemCount(seedid - 1) < 165 then
   if getBot():hasAccessToTile(tile.x,tile.y-1) then
    findPath(tile.x, tile.y - 1)
            while getBot():getTile(tile.x, tile.y - 1).fg == seedid and getBot():canHarvest(tile.x, tile.y - 1) do
              reconnect(tile.x, tile.y - 1)
              getBot():hitTile(tile.x, tile.y - 1)
              sleep(delayharvest)
            end
            while getBot():getTile(tile.x, tile.y).fg == (seedid + 3) and getBot():getTile(tile.x, tile.y).flags ~= 0 do
              punch(0,1)
              sleep(delayharvest + 150)
              reconnect(tile.x, tile.y - 1)
            end
          end
      end
    end
  end
end
end

function mf(xy)
    return math.floor(xy / 32)
end

function punch(x,y)
    getBot():hitTile(mf(getBot():getLocal().pos.x) + x,mf(getBot():getLocal().pos.y) + y)
end

function place(id,x,y)
   getBot():placeTile(mf(getBot():getLocal().pos.x) + x,mf(getBot():getLocal().pos.y) + y,id)
end


 function coptrashs()
        for a, trash in pairs(trashList) do
            trash_count = getBot():getItemCount(trash)
            if getBot():getItemCount(trash) > MaxItemToTrash then
                getBot():sendPacket("action|trash\n|itemID|"..trash,2) 
                sleep(1500)
                getBot():sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|"..trash.."|\ncount|"..trash_count,2)
                sleep(4000)
            end
        end
    end


function trashclothes()
        for a, trash in pairs(item_list) do
            trash_count = getBot():getItemCount(trash)
            if getBot():getItemCount(trash) > 0 then
                getBot():sendPacket("action|trash\n|itemID|"..trash,2) 
                sleep(1500)
                getBot():sendPacket("action|dialog_return\ndialog_name|trash_item\nitemID|"..trash.."|\ncount|"..trash_count,2)
                sleep(4000)
            end
        end
    end



local processedTimes = {} -- Tabel untuk menyimpan waktu yang telah diproses

function botRest()
    local current_hour = tonumber(os.date("%H"))

    for i = #TimeRest, 1, -1 do
        local curah = TimeRest[i]
        if current_hour == curah and not isTimeProcessed(curah) then
            getBot():setBool("autoReconnect", false)
            getBot():disconnect()
            botshow("Bot Rest.. For " .. SleepRest .. " Minutes")
            sleep(SleepRest * 60 * 1000)
            getBot():reConnect()
            botshow("Bot Done Rest, Starting Back...")
            if getBot():getEnetStatus() ~= Connected then
          getBot():setBool("autoReconnect", true)
                repeat
                    getBot():reConnect()
                    sleep(10000)
                until getBot():getEnetStatus() == Connected
            end
            if getBot():getEnetStatus() == Connected then
            getBot():setBool("autoReconnect", true)
                table.insert(processedTimes, curah) -- Menyimpan waktu yang telah diproses
                warpdoang(rumah, widreal)
             botshow("Bot Start ")
                jalan()
                break -- Keluar dari loop jika jam cocok
            end
        end
    end
end


function isTimeProcessed(time)
    for i = 1, #processedTimes do
        if processedTimes[i] == time then
            return true -- Mengembalikan true jika waktu sudah diproses sebelumnya
        end
    end
    return false -- Mengembalikan false jika waktu belum diproses sebelumnya
end


  function scanBlock(ID)
  local toxic = 0
      for _,til in ipairs(getBot():getTiles()) do
          if til.fg == ID then
          toxic = toxic + 1
          end
      end
      return toxic
    end

function antiToxic()
    if scanBlock(778) > 0 then
        while scanBlock(778) > 0 do
            for _,tile in ipairs(getBot():getTiles()) do
                if tile.fg == 778  then
                    findPath(tile.x-1,tile.y)
                    while getBot():getTile(math.floor(getBot():getLocal().pos.x/32 + 1), math.floor(getBot():getLocal().pos.y/32)).fg == 778 do
                      punch(1,0)
                        sleep(160)
                    end
                end
            end
            for _,tile in ipairs(getBot():getTiles()) do
                if tile.fg == 778 and getBot():getTile(tile.x-1,tile.y).flags==0 then
                   findPath(tile.x-1,tile.y)
                    while getBot():getTile(math.floor(getBot():getLocal().pos.x/32 + 1), math.floor(getBot():getLocal().pos.y/32)).fg == 778 do
                        punch(1, 0)
                        sleep(160)
                    end
                end
            end
        end
    end
end

function offandon()
waras = getBot():getWorld().name
RequestINFO = {}
RequestINFO.url = RentryLink
x = httpReq(RequestINFO)
if x.success then
  if x.body == "OFF" then
        getBot():disconnect()
repeat
botshow("Bot Off..")
sleep(3000)
x = httpReq(RequestINFO)
until x.body == "ON"  
sleep(1000)
        sleep(1000)
        botshow("Bot Back Online..")
        getBot():reConnect()
        sleep(10000)
        warpdoang(waras,widreal)
end
end
end

function banned()
getBot():remove()
  end

function backpos(x,y)
sleep(7000)
werkd = rumah
    for _, tile in ipairs(getBot():getTiles()) do
       if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
            repeat
            getBot():sendPacket("action|join_request\nname|".. werkd .. "|" .. widreal.."\ninvitedWorld|0",3)
            sleep(7000)
            until getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg ~= 6
            if x and y and getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    findPath(x,y)
                    sleep(400)
                until math.floor(getBot():getLocal().pos.x / 32) == x or math.floor(getBot():getLocal().pos.y / 32) == y
            end
            if getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot():getBotStatus() == Success and math.floor(getBot():getLocal().pos.x / 32) == x and math.floor(getBot():getLocal().pos.y / 32) == y then
                        break
                    end
                elseif getBot():getBotStatus() == Success then
                    break
                end
            end
        end
    end
end

function enetStatus()
    if getBot():getEnetStatus() == Disconnected then
        return string.upper("Offline")
    elseif getBot():getEnetStatus() == Connected then
        return string.upper("Online")
    elseif getBot():getBotStatus() == ShadowBan then
        return string.upper("Shadow Ban")
    else
        return string.upper("Unknown Status")
    end
end

function reconnect(x,y)
while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 do
backpos(x,y)
end
if getBot():getBotStatus() == Banned then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
end
atas = getBot():getWorld().name
if getBot():getEnetStatus() == Connected and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot():getLocal().name:upper().."  In EXIT, Now Back To Farm In "..rumah.." @everyone **")
sleep(5000)
warpdoang(rumah,widreal)
backpos(x,y)
jalan()
end
if getBot():getEnetStatus() ~= Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..enetStatus().." Reconnecting... @everyone **")
repeat
sleep(1000)
getBot():reConnect()
sleep(12000)
until getBot():getEnetStatus() == Connected or getBot():getBotStatus() == Suspended or getBot():getBotStatus() == Banned 
if getBot():getBotStatus() == Suspended then 
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
end
if getBot():getBotStatus() == Banned then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
end
if getBot():getBotStatus() == Success and getBot():getEnetStatus() == Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..enetStatus().." Now Back To Farm.. @everyone **")
sleep(5000)
warpdoang(rumah,widreal)
backpos(x,y)
jalan()
end
end
end

  function Take()
botshow("Taking Seed For Planting Blank Seed")
	warpdoang(WorldSaveSeed[IndexSaveSeed], WorldSaveSeedID)
	for _, object in pairs(getBot():getObjects()) do
	  if object.id == seedid then
		if getBot():getItemCount(seedid) == 200 then
		  break
		end
		findPath(math.floor(object.pos.x /32), math.floor(object.pos.y /32))
		sleep(100)
		getBot():autoCollect(4,true)
                if getBot():getItemCount(seedid) > 0 then
                getBot():autoCollect(4,false)
             end
	  end
	end
	  warpdoang(rumah,widreal)
	end

  function tambal()
  botshow("Planting Blank Seed...")
for _, tile in ipairs(getBot():getTiles()) do
if tile.fg ~= 0 and tile.fg ~= seedid and getBot():getTile(tile.x, tile.y-1).fg ~= seedid-1 and getBot():getTile(tile.x, tile.y-1).fg ~= seedid and getBot():getItemCount(seedid) > 0 then
if getBot():getItemCount(seedid) == 0 then		
Take()
end
if getBot():hasAccessToTile(tile.x, tile.y-1) then
if getBot():getTile(tile.x, tile.y-1).fg == 0 then
findPath(tile.x, tile.y-1)
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 1), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 1), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
end
end
end
end
end

function banwave()
waras = getBot():getWorld().name
RequestINFO = {}
RequestINFO.url = "https://rentry.org/rihkumah/raw"
x = httpReq(RequestINFO)
if x.success then
local playerNumber = tonumber(x.body:match("%d+"))
  if playerNumber and playerNumber > tonumber(CustomOffPlayer) then
  local startTime = os.time() -- Waktu mulai
    sleep(1000)
    getBot():setBool("autoReconnect", false)
    getBot():disconnect()
    botshow("Bot Off, Ban Wave!, And Rest For "..SleepBotOff.." Minutes")
    sleep(SleepBotOff * 60 * 1000)
    getBot():setBool("autoReconnect", true)
    if getBot():getEnetStatus() ~= Connected then
    while getBot():getEnetStatus() ~= Connected do
    getBot():reConnect()
    sleep(7000)
    end
    end
    if getBot():getEnetStatus() == Connected then
    warpdoang(rumah,widreal)
    botshow("Bot Start")
    jalan()
  end
end
end
end

function takenyaseed()
warpdoang(WorldSaveSeed[IndexSaveSeed],WorldSaveSeedID)
getBot():autoCollect(4,false)
while getBot():getItemCount(seedid) < 120 do
        for _,obj in pairs(getBot():getObjects()) do
            if obj.id == seedid then
                findPath(math.floor(obj.pos.x  / 32 - 1),math.floor(obj.pos.y / 32))
                sleep(1000)
                getBot():autoCollect(4,true)
                sleep(1000)
            end
            if getBot():getItemCount(seedid) > 120 or getBot():getItemCount(seedid) == 120 then
                getBot():autoCollect(4,false)
                break
            end
        end
    end
if getBot():getItemCount(seedid) > 121 then
    getBot():sendPacket("action|drop\n|itemID|"..seedid,2)
    sleep(1000)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|"..seedid.."|\ncount|"..(getBot():getItemCount(seedid) - 120),2)
    sleep(1000)
end
warpdoang(rumah,widreal)
end

function collectfloat()
	for _, object in pairs(getBot():getObjects()) do
	  if object.id == seedidfloat then
		findPath(math.floor(object.pos.x /32), math.floor(object.pos.y /32))
		sleep(2000)
		getBot():autoCollect(10,true)
      getBot():setBool("ignoreGem", true)
                if getBot():getItemCount(seedidfloat) > 165 then
         getBot():autoCollect(4,true)
           getBot():setBool("ignoreGem", false)
           break
             end
	  end
	end
	end

function harvest()
if modefloat then
collectfloat()
end
if getBot():getItemCount(10158) == 0 then
takemagni()
end
if SeparatePlant then
antiToxic()
soilmode()
coptrashs()
if UseMethod then
getBot():setBool("ignoreGem", true)
end
getBot():autoCollect(4,true)
for _, tile in ipairs(getBot():getTiles()) do
if getBot():getTile(tile.x,tile.y-1).fg == seedid and getBot():canHarvest(tile.x,tile.y-1) and getBot():getItemCount(seedid-1) < 165 and getBot():getItemCount(seedid) < 200 then
if getBot():hasAccessToTile(tile.x,tile.y-1) then
 findPath(tile.x,tile.y-1)
while getBot():getTile(tile.x,tile.y - 1).fg == seedid and getBot():canHarvest(tile.x,tile.y-1) do
reconnect(tile.x,tile.y-1)
getBot():hitTile(tile.x,tile.y-1)
sleep(delayharvest)
end
end
end
end
else
antiToxic()
soilmode()
coptrashs()
getBot():autoCollect(4,true)
if UseMethod then
getBot():setBool("ignoreGem", true)
end
for _, tile in ipairs(getBot():getTiles()) do
if getBot():getTile(tile.x,tile.y-1).fg == seedid and getBot():canHarvest(tile.x,tile.y-1) and getBot():getItemCount(seedid-1) < 165 then
if getBot():getItemCount(seedid) == 0 then
takenyaseed()
end
if getBot():hasAccessToTile(tile.x,tile.y-1) then
findPath(tile.x,tile.y-1)
while getBot():getTile(tile.x,tile.y - 1).fg == seedid and getBot():canHarvest(tile.x,tile.y-1) do
reconnect(tile.x,tile.y-1)
getBot():hitTile(tile.x,tile.y-1)
sleep(delayharvest)
end
while getBot():getTile(tile.x,tile.y -1).fg == 0 and getBot():getTile(tile.x,tile.y -1).flags ~= 0 do
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(delayplant)
end
end
end
end
end
end

function plant()
if not SeparatePlant then
return
end
if DontPlant then
return
end
coptrashs()
if not IgnoreGems and UseMethod then
getBot():setBool("ignoreGem", false)
end
for _, tile in ipairs(getBot():getTiles()) do
if tile.fg ~= 0 and tile.fg ~= seedid and getBot():getTile(tile.x, tile.y-1).fg ~= seedid-1 and getBot():getTile(tile.x, tile.y-1).fg ~= seedid and getBot():getItemCount(seedid) > 0 then
if getBot():getTile(tile.x, tile.y-1).fg == 0 then
if getBot():hasAccessToTile(tile.x,tile.y-1) then
findPath(tile.x, tile.y-1)
 while getBot():getTile(tile.x, tile.y).fg == (seedid + 3) and getBot():getTile(tile.x, tile.y).flags ~= 0 do
 punch(0,1)
 sleep(delayharvest + 150)
 reconnect(tile.x, tile.y - 1)
 end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32 - 1), math.floor(getBot():getLocal().pos.y / 32)).fg == 0 then
reconnect(tile.x,tile.y-1)
getBot():placeTile(tile.x,tile.y-1,seedid)
sleep(20)
sleep(delayplant)
end
end
end
end
end
end

 sayAn= {
        "Finally",
        "Wow Have A Nice Day",
        "Love You /kiss",
        "Bentar lagi weekend, pasti seru banget nih.",
        "Cuma bisa doa aja, gimana lagi.",
        "Lagi asik main, ada yang gangguin.",
        "Gue gak peduliin, tinggalin aja.",
        "Lagi mikirin, gak usah bener-bener serius.",
        "Jangan dibawa serius, nanti malah stress.",
        "Kondisi lagi kacau, gak karuan banget.",
        "Kapan Ya Makan Enak",
    }

    local acakIndex = math.random(1, #sayAn)
    local totalsay = sayAn[acakIndex]


function warpdoang(world,id)
while getBot():getWorld().name:upper() ~= world:upper() or getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 do
getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
sleep(9000)
getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
sleep(9000)
if UseMethod then
getBot():say(totalsay)
sleep(1000)
end
end
end

nuked = false 
function warp(world,id)
    cok = 0
while getBot():getWorld().name:upper() ~= world:upper() and not nuked do
        while getBot():getBotStatus() ~= Success do
            getBot():reConnect()
            sleep(8000)
        end
        getBot():sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
        sleep(10000)
        if cok == 10 then
            nuked = true
        else
            cok = cok + 1
        end
    end
::AFGAN::
    if id ~= "" and not nuked then
        while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 and not nuked do
            while getBot():getBotStatus() ~= Success do
                getBot():reConnect()
                sleep(5500)
            end
            getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
            sleep(5000)
        end
    else
     while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 and not nuked do
        while getBot():getBotStatus() ~= Success do
                getBot():reConnect()
                sleep(5000)
            end
   getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..id:upper().."\ninvitedWorld|0",3)
            sleep(5000)
    end
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
goto AFGAN
end
if UseMethod then
getBot():say(totalsay)
sleep(1000)
end
end

function warpfarm(world,id)
    cok = 0
while getBot():getWorld().name:upper() ~= world:upper() and not nuked do
        while getBot():getBotStatus() ~= Success do
            getBot():reConnect()
            sleep(8000)
        end
        getBot():sendPacket("action|join_request\nname|"..world:upper().."\ninvitedWorld|0",3)
        sleep(10000)
        if cok == 10 then
            nuked = true
        else
            cok = cok + 1
        end
    end
::AFGAN::
    if id ~= "" and not nuked then
  while getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 and not nuked do
   for i=1, #wid do
widreal = wid[i]
            while getBot():getBotStatus() ~= Success do
                getBot():reConnect()
                sleep(5500)
            end
            getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..wid[i].."\ninvitedWorld|0",3)
            sleep(5000)
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg ~= 6 then
break
end
        end
   for i=1, #wid do
widreal = wid[i]
           getBot():sendPacket("action|join_request\nname|"..world:upper().."|"..wid[i].."\ninvitedWorld|0",3)
            sleep(5000)
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg ~= 6 then
break
end
end
end
end
if getBot():getTile(math.floor(getBot():getLocal().pos.x / 32),math.floor(getBot():getLocal().pos.y / 32)).fg == 6 then
goto AFGAN
end
if UseMethod then
getBot():say(totalsay)
sleep(1000)
end
end

function restoretime()
for i = 1,#TimeRest do
table.insert(Time, #TimeRest)
end
end

function dropItem(itemID, count)
if getBot():getItemCount(itemID) >= count then
getBot():sendPacket("action|drop\nitemID|" .. itemID,2)
sleep(500)
getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|" .. itemID .. "|\ncount|" .. count,2)
sleep(1000)
end
end 

function modscounter()
  for _, player in pairs(getBot():getPlayers()) do
    if player.mod then
      TagBan("**MODS DETECTED IN WORLD "..rumah.." THE NAME IS : "..player.name.." **")
    else
return
end
  end

  if AutoLeaveWhenModsJoin then
    getBot():warp("EXIT")
    sleep(DelayLeaveWorld * 60 * 1000)
    warp(rumah, wid)
    jalan()
  end

  if AutoOffAndReconnect then
    getBot():setBool("autoReconnect", false)
    getBot():disconnect()
    sleep(DelayOff * 60 * 1000)
    getBot():setBool("autoReconnect", true)

    if getBot():getBotStatus() ~= Success then
      repeat
        getBot():reConnect()
        sleep(8000)
      until getBot():getBotStatus() == Success or getBot():getBotStatus() == Banned or getBot():getBotStatus() == Suspended

      if getBot():getBotStatus() == Suspended or getBot():getBotStatus() == Banned then
        TagBan("**"..getBot():getLocal().name:upper().." Was "..status().." After Trying To Run From Mods**")
      end

      if getBot():getBotStatus() == Success then
        warp(rumah, wid)
        jalan()
      end
    end
  end
end


function takepick()
if TakePick then
if getBot():getItemCount(98) == 0 then
sleep(sleepwarp)
botshow("Bot Taking Pickaxe..")
    warpdoang(WorldPick,WorldPickID)
    sleep(100)
    while getBot():getItemCount(98) == 0 do
           sleep(5000)
        for _,obj in pairs(getBot():getObjects()) do
            if obj.id == 98 then
                getBot():findPath(math.floor(obj.pos.x / 32),math.floor(obj.pos.y / 32))
                sleep(1000)
                getBot():autoCollect(4,true)
            end
            if getBot():getItemCount(98) > 0 then
              getBot():autoCollect(4,false)
                break
            end
        end
    end
 getBot():autoCollect(4,false)
    getBot():move(LEFT,1)
    sleep(2000)
   getBot():move(UP,1)
   sleep(1000)
   getBot():move(DOWN,1)
    sleep(1000)
    getBot():sendPacket("action|drop\n|itemID|98",2)
    sleep(900)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|98|\ncount|"..(getBot():getItemCount(98) - 1),2)
    sleep(1000)
    wear(98)
    sleep(500)
end
end
end

function takemagni()
if TakeMagnifience then
if getBot():getItemCount(10158) == 0 then
sleep(sleepwarp)
botshow("Bot Taking Magnifience..")
    warpdoang(WorldMagnifience,WorldMagnifienceID)
    sleep(100)
    while getBot():getItemCount(10158) == 0 do
           sleep(5000)
        for _,obj in pairs(getBot():getObjects()) do
            if obj.id == 10158 then
                getBot():findPath(math.floor(obj.pos.x / 32),math.floor(obj.pos.y / 32))
                sleep(1000)
                getBot():autoCollect(4,true)
            end
            if getBot():getItemCount(10158) > 0 then
              getBot():autoCollect(4,false)
                break
            end
        end
    end
 getBot():autoCollect(4,false)
    getBot():move(LEFT,1)
    sleep(2000)
   getBot():move(UP,1)
   sleep(1000)
   getBot():move(DOWN,1)
    sleep(1000)
    getBot():sendPacket("action|drop\n|itemID|10158",2)
    sleep(900)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|10158|\ncount|"..(getBot():getItemCount(10158) - 1),2)
    sleep(1000)
    wear(10158)
    sleep(500)
    ceksampah()
end
end
end

function takehose()
if CounterFire then
if getBot():getItemCount(3066) == 0 then
sleep(sleepwarp)
    warpdoang(WorldStorageFire,IDWorldStorageFire)
    sleep(100)
    while getBot():getItemCount(3066) == 0 do
        for _,obj in pairs(getBot():getObjects()) do
            if obj.id == 3066 then
                getBot():findPath(math.floor(obj.pos.x / 32),math.floor(obj.pos.y / 32))
                sleep(1000)
                getBot():autoCollect(4,true)
            end
            if getBot():getItemCount(3066) > 0 then
              getBot():autoCollect(4,false)
                break
            end
        end
    end
    getBot():move(LEFT,1)
    sleep(1000)
   getBot():move(UP,1)
   sleep(500)
   getBot():move(DOWN,1)
    getBot():sendPacket("action|drop\n|itemID|3066",2)
    sleep(1000)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|3066|\ncount|"..(getBot():getItemCount(3066) - 1),2)
    sleep(1000)
if fire then
   wear(3066)
end
   warpdoang(rumah,widreal)
botshow("Bot Start")
end
end
end

function joinworld()
botshow("World Finish, Joining World...")
    sleep(100)
    for _,bimba in pairs(WorldForJoin) do 
    kasep = math.random(1, #WorldForJoin)
        warpdoang(WorldForJoin[kasep],"")
        sleep(4000)
    end
end

function autoban()
 for _, peler in pairs(getBot():getPlayers()) do
        for _, own in pairs(WhiteList) do
            if peler.name:upper() == own:upper() and peler.name:upper() ~= getBot():getLocal().name:upper() then
                getBot():say("/ban "..peler.name)
                sleep(3000) 
               end
            end
        end
    end

function autoleave()
if AutoLeave then
for _, peler in pairs(getBot():getPlayers()) do
for _, own in pairs(WhiteList) do
       if peler.name:upper() == own:upper() and peler.name:upper() ~= getBot():getLocal().name:upper() then
if peler > MaxPeople then
getBot():sendPacket(3,"action|join_request\nname|" .. EXIT .. "\ninvitedWorld|0")
sleep(DelayLeave)
warpdoang(rumah,wid)
jalan()
end
end
end
end
end
end


function breaks()
xbot = math.floor(getBot():getLocal().pos.x/32)
ybot = math.floor(getBot():getLocal().pos.y/32)
cekbp()
rmetot1()
    coptrashs()
if getBot():getItemCount(98) > 0 and not getBot():isEquipped(98) then
wear(98)
end
if not IgnoreGems then
getBot():setBool("ignoreGem", false)
end
if getBot():getTile(1,ybot).fg == 0 or getBot():getTile(0,ybot).fg == 0 then
    getBot():findPath(1,ybot)
    sleep(100)
posX = 2
posY = ybot + 1
end
if getBot():getTile(1,ybot).fg ~= 0 or getBot():getTile(0,ybot).fg ~= 0 then
posX = 2
posY = 7
if getBot():findPath(1,6) then
sleep(100)
else
posX = 2
posY = 6
findPath(1,5)
sleep(100)
end
end
   while getBot():getItemCount(seedid - 1) > 0 and getBot():getItemCount(seedid) < 200 do
      reconnect(posX - 1, posY - 1)
        if BreakTiles == "1" then
            getBot():placeTile(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            while getBot():getTile(posX - 2, posY - 1).fg ~= 0 or getBot():getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hitTile(posX - 2, posY - 1)
                sleep(delaypunch)
            reconnect(posX - 1, posY - 1)
            end
        end
        if BreakTiles == "2" then
            getBot():placeTile(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            getBot():placeTile(posX - 2, posY - 2, seedid - 1)
            sleep(delayplace)
            while getBot():getTile(posX - 2, posY - 1).fg ~= 0 or getBot():getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hitTile(posX - 2, posY - 1)
                sleep(delaypunch)
      reconnect(posX - 1, posY - 1)
            end
            while getBot():getTile(posX - 2, posY - 2).fg ~= 0 or getBot():getTile(posX - 2, posY - 2).bg ~= 0 do
                getBot():hitTile(posX - 2, posY - 2)
                sleep(delaypunch)
      reconnect(posX - 1, posY - 1)
            end
        end
        if BreakTiles == "3" then
            getBot():placeTile(posX - 2, posY - 2, seedid - 1)
            sleep(delayplace)
            getBot():placeTile(posX - 2, posY - 1, seedid - 1)
            sleep(delayplace)
            getBot():placeTile(posX - 2, posY, seedid - 1)
            sleep(delayplace)
            while getBot():getTile(posX - 2, posY - 2).fg ~= 0 or getBot():getTile(posX - 2, posY - 2).bg ~= 0 do
                getBot():hitTile(posX - 2, posY - 2)
                sleep(delaypunch)
           reconnect(posX - 1, posY - 1)
            end
            while getBot():getTile(posX - 2, posY - 1).fg ~= 0 or getBot():getTile(posX - 2, posY - 1).bg ~= 0 do
                getBot():hitTile(posX - 2, posY - 1)
                sleep(delaypunch)
           reconnect(posX - 1, posY - 1)
            end
            while getBot():getTile(posX - 2, posY).fg ~= 0 or getBot():getTile(posX - 2, posY).bg ~= 0 do
                getBot():hitTile(posX - 2, posY)
                sleep(delaypunch)
            reconnect(posX - 1, posY - 1)
            end
        end
if BreakTiles == "4" then
getBot():placeTile(posX-2,posY-3,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY-2,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY-1,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY,seedid-1)
sleep(delayplace)
while getBot():getTile(posX-2,posY-3).fg ~= 0 or getBot():getTile(posX-2,posY-3).bg ~= 0 do
getBot():hitTile(posX-2,posY-3)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY-2).fg ~= 0 or getBot():getTile(posX-2,posY-2).bg ~= 0 do
getBot():hitTile(posX-2,posY-2)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY-1).fg ~= 0 or getBot():getTile(posX-2,posY-1).bg ~= 0 do
getBot():hitTile(posX-2,posY-1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY).fg ~= 0 or getBot():getTile(posX-2,posY).bg ~= 0 do
getBot():hitTile(posX-2,posY)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
end
if BreakTiles == "5" then
getBot():placeTile(posX-2,posY-3,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY-2,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY-1,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY,seedid-1)
sleep(delayplace)
getBot():placeTile(posX-2,posY+1,seedid-1)
sleep(delayplace)
while getBot():getTile(posX-2,posY-3).fg ~= 0 or getBot():getTile(posX-2,posY-3).bg ~= 0 do
getBot():hitTile(posX-2,posY-3)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY-2).fg ~= 0 or getBot():getTile(posX-2,posY-2).bg ~= 0 do
getBot():hitTile(posX-2,posY-2)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY-1).fg ~= 0 or getBot():getTile(posX-2,posY-1).bg ~= 0 do
getBot():hitTile(posX-2,posY-1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY).fg ~= 0 or getBot():getTile(posX-2,posY).bg ~= 0 do
getBot():hitTile(posX-2,posY)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
while getBot():getTile(posX-2,posY+1).fg ~= 0 or getBot():getTile(posX-2,posY+1).bg ~= 0 do
getBot():hitTile(posX-2,posY+1)
sleep(delaypunch)
reconnect(posX - 1, posY - 1)
end
end
end
end

function foregraund2()
local count = 0
for _, obj in pairs(getBot():getObjects()) do
if obj.id == seedidfloat then
count = count + obj.count
end
end
return count
end

function foregraund(itemid)
if modefloat then
return foregraund2()
end
      local count = 0
      for _, tile in ipairs(getBot():getTiles()) do
        if tile.fg == itemid and getBot():canHarvest(tile.x,tile.y) then
      if getBot():hasAccessToTile(tile.x,tile.y) then
          count = count + 1
      end
   end
end
      return count
    end

function backpospack(worldnya,x,y)
werkd = worldnya
    for _, tile in ipairs(getBot():getTiles()) do
        if tile.fg == 6 then
            getBot():sendPacket("action|join_request\nname|".. werkd .. "|" .. WorldSavePackID.."\ninvitedWorld|0",3)
            sleep(1000)
            if x and y and getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    findPath(x,y)
                    sleep(100)
                until math.floor(getBot():getLocal().pos.x / 32) == x or math.floor(getBot():getLocal().pos.y / 32) == y
            end
            if getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot():getBotStatus() == Success and math.floor(getBot():getLocal().pos.x / 32) == x and math.floor(getBot():getLocal().pos.y / 32) == y then
                        break
                    end
                elseif getBot():getBotStatus() == Success then
                    break
                end
            end
        end
    end
end

function backposseed(worldnya,x,y)
werkd = worldnya
    for _, tile in ipairs(getBot():getTiles()) do
        if tile.fg == 6 then
            getBot():sendPacket("action|join_request\nname|".. werkd .. "|" .. WorldSaveSeedID.."\ninvitedWorld|0",3)
            sleep(1000)
            if x and y and getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                repeat
                    findPath(x,y)
                    sleep(100)
                until math.floor(getBot():getLocal().pos.x / 32) == x or math.floor(getBot():getLocal().pos.y / 32) == y
            end
            if getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == werkd:upper() then
                if x and y then
                    if getBot():getBotStatus() == Success and math.floor(getBot():getLocal().pos.x / 32) == x and math.floor(getBot():getLocal().pos.y / 32) == y then
                        break
                    end
                elseif getBot():getBotStatus() == Success then
                    break
                end
            end
        end
    end
end

function reconnectpack(world,x,y)
if getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot():getLocal().name:upper().."  In EXIT, Now Back Saving "..pack.." In "..world.." @everyone **")
sleep(5000)
warpdoang(world,WorldSavePackID)
sleep(500)
backpospack(world,x,y)
end
if getBot():getEnetStatus() ~= Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Reconnecting... @everyone **")
repeat
getBot():reConnect()
sleep(8000)
until getBot():getEnetStatus() == Connected or getBot():getBotStatus() == Suspended or getBot():getBotStatus() == Banned 
if getBot():getBotStatus() == Suspended then 
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot():getBotStatus() == Banned then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot():getBotStatus() == Success and getBot():getEnetStatus() == Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Now Back To Saving "..pack.." In "..world.." @everyone **")
sleep(5000)
warpdoang(world,WorldSavePackID)
sleep(500)
backpospack(world,x,y)
end
end
end

function reconnectseed(world,x,y)
if getBot():getBotStatus() == Success and getBot():getWorld().name:upper() == "EXIT" then
TagBan("**"..getBot():getLocal().name:upper().." In EXIT, Now Back Saving Seed In "..world.." @everyone **")
sleep(5000)
warpdoang(world,WorldSaveSeedID)
sleep(500)
backposseed(world,x,y)
end
if getBot():getEnetStatus() ~= Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Reconnecting... @everyone **")
repeat
getBot():reConnect()
sleep(8000)
until getBot():getEnetStatus() == Connected or getBot():getBotStatus() == Suspended or getBot():getBotStatus() == Banned 
if getBot():getBotStatus() == Suspended then 
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot():getBotStatus() == Banned then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Removing Bot... @everyone**")
banned()
elseif getBot():getBotStatus() == Success and getBot():getEnetStatus() == Connected then
TagBan("**"..getBot():getLocal().name:upper().."  Was "..status().." Now Back To Saving Seeds In "..world.." @everyone **")
sleep(5000)
warpdoang(world,WorldSaveSeedID)
sleep(500)
backposseed(world,x,y)
end
end
end

function round(n)
    return n % 1 > 0.5 and math.ceil(n) or math.floor(n)
end


function CekTilePack(x,y,num)
    local count = 0
    local stack = 0
    for _,obj in pairs(getBot():getObjects()) do
        if round(obj.pos.x / 32) == x and math.floor(obj.pos.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if stack < 15 and count <= (3800 - num) then
        return true
    end
    return false
end

function CekTileSeeds(x,y,num)
    local count = 0
    local stack = 0
    for _,obj in pairs(getBot():getObjects()) do
        if round(obj.pos.x / 32) == x and math.floor(obj.pos.y / 32) == y then
            count = count + obj.count
            stack = stack + 1
        end
    end
    if stack < 15 and count <= (3800 - num) then
        return true
    end
    return false
end


function faceSide(direction)
    local pkt = {}
    pkt.type = 0
    if direction == "left" then
        pkt.flags = 48
    elseif direction == "right" then
        pkt.flags = 32
    end
    pkt.pos_x = getBot():getLocal().pos.x/32
    pkt.pos_y = getBot():getLocal().pos.y/32
    getBot():sendPacketRaw(pkt)
end

function savecuy()
atas = getBot():getWorld().name
    for _,pack in pairs(packitemid) do
        for _,tile in ipairs(getBot():getTiles()) do
            if tile.fg == IDPatokanPack or tile.bg == IDPatokanPack then
                if CekTilePack(tile.x,tile.y,getBot():getItemCount(pack)) then
                    while math.floor(getBot():getLocal().pos.x / 32) ~= (tile.x - 1) or math.floor(getBot():getLocal().pos.y / 32) ~= tile.y do
                        getBot():findPath(tile.x - 1,tile.y)
                        sleep(500)
                         reconnectpack(atas, tile.x, tile.y)
                    end
                    faceSide("right")
                    while getBot():getItemCount(pack) > 0 and CekTilePack(tile.x,tile.y,getBot():getItemCount(pack)) do
                        getBot():sendPacket("action|drop\n|itemID|"..pack,2)
                        sleep(1000)
                        getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|"..pack.."|\ncount|"..getBot():getItemCount(pack),2)
                        sleep(1000)
                        reconnectpack(atas, tile.x, tile.y)
                    end
                end
            end
            if getBot():getItemCount(pack) == 0 then
                break
            end
        end
    end
end

function ceksampah()
warp(WorldSavePack[IndexSavePack],WorldSavePackID)
getBot():autoCollect(4,false)
sampah()
getBot():autoCollect(4,true)
end

function sampah()
if next(CustomItem) ~= nil then
getBot():move(UP,1)
for _, sampah in pairs(CustomItem) do
royal = getBot():getItemCount(sampah)
    while getBot():getItemCount(sampah) ~= 0 do
    getBot():sendPacket("action|drop\nitemID|" .. sampah,2)
    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|" .. sampah .. "|\ncount|" ..royal,2)
    sleep(500)
    getBot():move(RIGHT,1)
    end
end
    else
    return
end
warpdoang(rumah, widreal)
end

function SeedsScanner(ItemID)
local kiwar = 0
    for _, object in pairs(getBot():getObjects()) do 
        if object.id == ItemID then
      kiwar = kiwar + object.count
        end
    end
return kiwar
end

function saveseed()
getBot():autoCollect(4,false)
botpack("Saving Seeds")
atas = getBot():getWorld().name
        warpdoang(WorldSaveSeed[IndexSaveSeed],WorldSaveSeedID)
rara = SeedsScanner(seedid)
    for _, tile in ipairs(getBot():getTiles()) do
        if tile.fg == IDPatokanSeed or tile.bg == IDPatokanSeed then 
           if CekTileSeeds(tile.x,tile.y,getBot():getItemCount(seedid)) then
                while math.floor(getBot():getLocal().pos.x / 32) ~= (tile.x - 1) or math.floor(getBot():getLocal().pos.y / 32) ~= tile.y do
                    getBot():findPath(tile.x - 1,tile.y)
                    sleep(500)
                    reconnectseed(atas, tile.x, tile.y)
                end
                while getBot():getItemCount(seedid) > 0 and CekTileSeeds(tile.x,tile.y,getBot():getItemCount(seedid)) do
                    getBot():sendPacket("action|drop\n|itemID|"..seedid,2)
                    sleep(1000)
                    getBot():sendPacket("action|dialog_return\ndialog_name|drop_item\nitemID|"..seedid.."|\ncount|"..getBot():getItemCount(seedid),2)
                    sleep(1000)
                    reconnectseed(atas, tile.x, tile.y)
                end
            end
        if getBot():getItemCount(seedid) == 0 then
                break
            end
        end
    end
    seeddrop = SeedsScanner(seedid)
   hasilseed = math.abs(rara - seeddrop)
    botpack("Success Saving Seeds")
    hasilseed = 0
randomSeed = math.random(1, #WorldSaveSeed)
IndexSaveSeed = randomSeed

    warpdoang(rumah, widreal)
end



function belicuy()
  woloy = getBot():getWorld().name
    getBot():autoCollect(4,false)
    botpack("Buying Pack..")
    warpdoang(WorldSavePack[IndexSavePack],WorldSavePackID)
   rara = SeedsScanner(packitemid[1])
    while getBot():getLocal().gems > packgems do
            getBot():sendPacket("action|buy\nitem|".. itemname,2)
            sleep(4000)
            gemssave = gemssave + packgems
        if getBot():getItemCount(packitemid[1]) < 1 then
                getBot():sendPacket("action|buy\nitem|upgrade_backpack",2)
                sleep(5000)
        end
        if getBot():getLocal().gems < packgems then
            break
      end
 end
        savecuy()
         totalpack = SeedsScanner(packitemid[1])
     hasilpack = math.abs(rara - totalpack)
        botpack("Done Droping Pack, Back To Farm...")
  hasilpack = 0
randomPack = math.random(1, #WorldSavePack)
IndexSavePack = randomPack
 
    warpdoang(rumah,widreal)
end

function anjay()
  if getBot():getLocal().gems > MinimumGems then 
            belicuy()
end
end

function rotisan()
if getBot():getItemCount(seedid) > 150 then
saveseed()
end
end


function CounterApi()
    for y = 0, 53 do
        for x = 0, 99 do
            if getBot():checkFlag(x, y, flagType.FIRE) and getBot():getTile(x, y - 1).flags == 0 then
              fire = true
                if getBot():getItemCount(3066) > 0 and not getBot():isEquipped(3066) then
                    wear(3066)
                    sleep(2000)
                    wear(3066)
                end
                sleep(5000)
                findPath(x, y - 2)
                sleep(500)
                punch(0, 2)
                sleep(2000)
            elseif getBot():checkFlag(x, y, flagType.FIRE) and getBot():getTile(x - 1, y).flags == 0 then
                fire = true
                if getBot():getItemCount(3066) > 0 and not getBot():isEquipped(3066) then
                    wear(3066)
                    sleep(2000)
                    wear(3066)
                end
                sleep(5000)
                findPath(x, y + 1)
                sleep(500)
                punch(0, -1)
                sleep(2000)
            end
        end
    end
   fire = false
    if getBot():getItemCount(98) > 0 then
        if not getBot():isEquipped(98) then
            wear(98)
        end
    end
end


function cukcuk1(world)
if foregraund(seedid) == 0 then
gemsakhir = getBot():getLocal().gems
gemssmua = gemsakhir + gemssave
local perbedaan = math.abs(gemsawal - gemssmua)
anjay()
pohon[world] = totaltree()
berlian[world] = perbedaan
botshow("World Finish")
gemssave = 0
end
end

function jalan()
letus = getBot():getWorld().name:upper()
if foregraund(seedid) == 0 then
cukcuk1(letus)
end
while foregraund(seedid) > 0 do
if UsingCommand then
offandon()
end
if CounterFire then
CounterApi()
end
harvest()
if AutoBan then
autoban()
end
if AutoLeave then
autoleave()
end
if RestBot then
botRest()
end
if AutoOffBot then
banwave()
end
if UsingCommand then
offandon()
end
breaks()
anjay()
if AutoOffBot then
banwave()
end
if UsingCommand then
offandon()
end
plant()
anjay()
if AutoOffBot then
banwave()
end
rotisan()
cukcuk1(letus)
end
end

function clearTable(tbl)
    for k in pairs(tbl) do
        tbl[k] = nil
    end
end

function startwoi()
while true do
if getBot():getEnetStatus() == Connected then
for index,world in pairs(worlds) do
emoji = cekemoji()
rumah = world
DataWorld()
sleep(sleepmulai)
if Guest then
sleep(20000)
end
takepick()
takemagni()
takehose()
warpfarm(world,wid)
if not nuked then
clearTable(processedTimes)
seedid = detect()
cekseed()
cekseed2()
if seedid == 0 then
modefloat = true
float1()
float2()
seedidfloat = detectfloat()
seedid  = detectfloat() + 1
end
botshow("Bot Start")
trashclothes()
antiToxic()
gemsawal = getBot():getLocal().gems
tt = os.time()
::VELISHA::
jalan()
if not modefloat then
modefloat = true
float1()
float2()
seedidfloat = detectfloat()
seedid  = detectfloat() + 1
if seedid ~= 1 and seedid ~= 113 then
  log("here "..seedid.."")
  goto VELISHA
end
end
log("disini")
tambal()
      tt = os.time() - tt
      Time[world] = math.floor(tt / 3600) .. " Hours " .. math.floor(tt % 3600 / 60) .. " Minutes"
      sleep(100)
      if start < #WorldList then
       start = start + 1
      modefloat = false
      else
      loopnya = loopnya + 1
     waktu = {}
     berlian = {}
     pohon = {}
     modefloat = false
      end
      if JoinWorldAfterFinish then
        joinworld()
      modefloat = false
      end
else
Time[world] = "NUKED"
botshow("World Is Nuked, Going To Next World..")
TagBan("**"..world:upper().." WAS NUKED** @everyone")
nuked = false
sleep(5000)
   end
end
if not loop then
    DataWorld()
    sleep(50)
    botshow("All World Finish, Remove Bot..")
    getBot():remove()
    break
  end
end
end
end

startwoi()
